# -*- coding: utf-8 -*-
"""Taxi_fare

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eCUORPW7na3tKimBMaIg9YvrmJ3x-MFA
"""

import numpy as np
import pandas as pd
from matplotlib import pyplot as plt
import seaborn as sns

taxifare_data = pd.read_csv('https://raw.githubusercontent.com/Premalatha-success/Datasets/main/TaxiFare.csv')

taxifare_data.describe()

taxifare_data.isnull().sum()

#amount cannot be a negative value
taxifare_data=taxifare_data.drop(taxifare_data[taxifare_data['amount']<0].index,axis=0)

taxifare_data[['date_of_pickup','time_of_pickup','drop']]=taxifare_data['date_time_of_pickup'].str.split(' ', expand=True)

taxifare_data.head(10)

taxifare_data.drop(taxifare_data[['drop','unique_id','date_time_of_pickup']],axis=1,inplace=True)

taxifare_data['longitude_distance']= taxifare_data['longitude_of_dropoff']-taxifare_data['longitude_of_pickup']
taxifare_data['latitude_distance']= taxifare_data['latitude_of_dropoff']-taxifare_data['latitude_of_pickup']
taxifare_data.drop(taxifare_data[['longitude_of_dropoff','longitude_of_pickup','latitude_of_dropoff','latitude_of_pickup']],axis=1,inplace=True)

taxifare_data[['longitude_distance','latitude_distance']]=np.abs(taxifare_data[['longitude_distance','latitude_distance']])
taxifare_data.head()

taxifare_data.dtypes

taxifare_data[['a','b','c']]= taxifare_data['time_of_pickup'].str.split(':',expand=True)

taxifare_data[['year','month','day']]=taxifare_data['date_of_pickup'].str.split('-',expand=True)

taxifare_data.drop(['date_of_pickup'],axis=1,inplace=True)

taxifare_data.head(10)

taxifare_data['a']=taxifare_data['a'].astype('int')
taxifare_data['b']= taxifare_data['b'].astype('int')
taxifare_data['c']= taxifare_data['c'].astype('int')
taxifare_data['time_of_pickup']= taxifare_data['a']*10000+taxifare_data['b']*100+taxifare_data['c']*1
taxifare_data.drop(['a','b','c'],axis=1,inplace=True)

taxifare_data['day']=taxifare_data['day'].astype('int')
taxifare_data['month']=taxifare_data['month'].astype('int')
taxifare_data['year']=taxifare_data['year'].astype('int')

taxifare_data.dtypes

taxifare_data.head()

from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

y=taxifare_data['amount']
x=taxifare_data.drop(['amount'],axis=1)

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.30,random_state=1)

lrmodel=LinearRegression()
lrmodel.fit(x_train,y_train)
lrmodel.score(x_train,y_train)

lrmodel.score(x_test,y_test)

from sklearn.tree import DecisionTreeRegressor
dtmodel=DecisionTreeRegressor()
dtmodel.fit(x_train,y_train)
dtmodel.score(x_train,y_train)

dtmodel.score(x_test,y_test)

from sklearn.ensemble import BaggingRegressor
bgmodel=BaggingRegressor()
bgmodel.fit(x_train,y_train)
bgmodel.score(x_train,y_train)

from sklearn.ensemble import RandomForestRegressor
rfmodel=RandomForestRegressor()
rfmodel.fit(x_train,y_train)
rfmodel.score(x_train,y_train)

rfmodel.score(x_test,y_test)

from sklearn.ensemble import AdaBoostRegressor
abmodel=AdaBoostRegressor()
abmodel.fit(x_train,y_train)
abmodel.score(x_train,y_train)

abmodel.score(x_test,y_test)

heatmap=sns.heatmap(taxifare_data.corr(),annot=True)

